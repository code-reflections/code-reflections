<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
      <title>CodeReflections - GitHub Pages</title>
      <link>https://codereflections.com</link>
      <description></description>
      <generator>Zola</generator>
      <language>en</language>
      <atom:link href="https://codereflections.com/tags/github-pages/rss.xml" rel="self" type="application/rss+xml"/>
      <lastBuildDate>Sat, 23 Dec 2023 00:00:00 +0000</lastBuildDate>
      <item>
          <title>Using Git submodules with Zola!</title>
          <pubDate>Sat, 23 Dec 2023 00:00:00 +0000</pubDate>
          <author>Deven T. Corzine</author>
          <link>https://codereflections.com/2023/12/23/using-git-submodules-with-zola/</link>
          <guid>https://codereflections.com/2023/12/23/using-git-submodules-with-zola/</guid>
          <description>&lt;p&gt;[I started working on this blog post back in September, but I had to set it
aside for months due to other priorities and distractions.  Now it&#x27;s nearly
Christmas!!  Oh well.]&lt;&#x2F;p&gt;
&lt;p&gt;When I created this blog, I wanted to use one Git repository for the Markdown
source files and a separate Git repository for the files generated by Zola, the
static site generator that I was using.  This is harder than it sounds, because
Zola automatically deletes the entire output directory at the start of its
build process, including the &lt;code&gt;public&#x2F;.git&lt;&#x2F;code&gt; file that identifies the &lt;code&gt;public&lt;&#x2F;code&gt;
output directory as a Git submodule.  Read on for the story of how I came up
with a solution for this chicken-and-egg problem...&lt;&#x2F;p&gt;
</description>
      </item>
    </channel>
</rss>
